version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: elearning-postgres
    environment:
      POSTGRES_DB: elearning_db
      POSTGRES_USER: elearning_user
      POSTGRES_PASSWORD: elearning_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - elearning-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U elearning_user -d elearning_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: elearning-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: elearning_user
      RABBITMQ_DEFAULT_PASS: elearning_pass
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - elearning-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: elearning-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/elearning_db
      SPRING_DATASOURCE_USERNAME: elearning_user
      SPRING_DATASOURCE_PASSWORD: elearning_pass

      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"

      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: elearning_user
      SPRING_RABBITMQ_PASSWORD: elearning_pass

      SERVER_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - elearning-network
    restart: unless-stopped

networks:
  elearning-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
