version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: elearning-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-elearning_db}
      POSTGRES_USER: ${POSTGRES_USER:-elearning_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-elearning_pass}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - elearning-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-elearning_user} -d ${POSTGRES_DB:-elearning_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: elearning-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-elearning_user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-elearning_pass}
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    networks:
      - elearning-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: elearning-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-elearning_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-elearning_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-elearning_pass}

      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_DDL_AUTO:-update}
      SPRING_JPA_SHOW_SQL: ${SPRING_JPA_SHOW_SQL:-true}
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: ${SPRING_JPA_FORMAT_SQL:-true}

      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER:-elearning_user}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-elearning_pass}

      SERVER_PORT: 8080

      # CORS Configuration
      CORS.ALLOWED.ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:5173}

      # Email Configuration (SMTP)
      SPRING_MAIL_HOST: ${MAIL_HOST:-sandbox.smtp.mailtrap.io}
      SPRING_MAIL_PORT: ${MAIL_PORT:-587}
      SPRING_MAIL_USERNAME: ${MAIL_USERNAME:-6804588db12cc8}
      SPRING_MAIL_PASSWORD: ${MAIL_PASSWORD:-f01a110d83af28}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: ${MAIL_SMTP_AUTH:-true}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: ${MAIL_SMTP_STARTTLS:-true}
      SPRING_MAIL_FROM: ${MAIL_FROM:-noreply@elearningcenter.com}

      # Application URLs
      APP_FRONTEND_URL: ${APP_FRONTEND_URL:-http://localhost:3000}
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - elearning-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:8080/api}
    container_name: elearning-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    depends_on:
      - backend
    networks:
      - elearning-network
    restart: unless-stopped

networks:
  elearning-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
